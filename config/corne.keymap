/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <dt-bindings/zmk/mouse.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

#define AS(keycode) &as LS(keycode) keycode

/ {
    chosen { zmk,matrix_transform = &five_column_transform; };

    behaviors {
        ht200: ht200 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            label = "HT200";
        };

        ht400: ht400 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            label = "HT400";
        };

        ht_layerhome: ht_layerhome {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <100>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&mo>, <&to>;

            label = "HT_LAYERHOME";
        };

        hmt400: hmt400 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <400>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&mkp>;

            label = "HMT400";
        };

        ht150: ht150 {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            quick-tap-ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;

            label = "HT150";
        };
    };

    combos {
        compatible = "zmk,combos";

        Layer1 {
            bindings = <&tog 1>;
            key-positions = <31 21>;
            timeout-ms = <50>;
        };

        Layer2 {
            bindings = <&tog 2>;
            key-positions = <31 22>;
            timeout-ms = <50>;
        };

        Layer3 {
            bindings = <&tog 3>;
            key-positions = <31 23>;
            timeout-ms = <50>;
        };

        Layer4 {
            bindings = <&tog 4>;
            key-positions = <31 11>;
            timeout-ms = <50>;
        };

        Layer5 {
            bindings = <&tog 5>;
            key-positions = <31 12>;
            timeout-ms = <50>;
        };

        Layer6 {
            bindings = <&tog 6>;
            key-positions = <31 13>;
            timeout-ms = <50>;
        };

        Layer7 {
            bindings = <&tog 7>;
            key-positions = <31 1>;
            timeout-ms = <50>;
        };

        Layer8 {
            bindings = <&tog 8>;
            key-positions = <31 2>;
            timeout-ms = <50>;
        };

        Layer9 {
            bindings = <&tog 9>;
            key-positions = <31 3>;
            timeout-ms = <50>;
        };

        LeftClick {
            bindings = <&mkp LCLK>;
            key-positions = <13 12>;
        };

        RightClick {
            bindings = <&mkp RCLK>;
            key-positions = <11 12>;
        };

        MiddleClick {
            bindings = <&mkp MCLK>;
            key-positions = <11 13>;
        };

        ScrollUp {
            bindings = <&kp UP_ARROW>;
            key-positions = <2 13>;
        };

        ScrollDown {
            bindings = <&kp DOWN>;
            key-positions = <13 22>;
        };

        CapsLck {
            bindings = <&kp CAPSLOCK>;
            key-positions = <16 13>;
        };

        AltTab {
            bindings = <&kp LA(TAB)>;
            key-positions = <11 12 13>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        Base {
            display-name = "Base";
            bindings = <
  &ht400 ESCAPE Q  &kp W              &kp E           &kp R              &kp T        &ht400 LC(Y) Y  &kp U              &kp I                    &kp O                   &kp P
  &ht400 LGUI A    &ht200 LEFT_ALT S  &ht200 LCTRL D  &ht150 LSHIFT F    &kp G        &kp H           &ht150 RSHIFT J    &ht200 RCTRL K           &ht200 RIGHT_ALT L      &ht400 LGUI SQT
  &ht400 LC(Z) Z   &ht400 LC(X) X     &ht400 LC(C) C  &ht400 LC(V) V     &kp B        &kp N           &kp M              &kp COMMA                &ht200 QUESTION PERIOD  &kp SLASH
                                      &kp TAB         &ht_layerhome 2 0  &kp SPACE    &kp RET         &ht_layerhome 1 0  &ht200 DELETE BACKSPACE
            >;
        };

        LTenKey_1 {
            bindings = <
  &kp SEMICOLON       &kp N7  &kp N8  &kp N9  &ht200 MINUS PLUS        &trans  &trans  &trans  &trans  &trans
  &ht200 LC(V) LC(C)  &kp N4  &kp N5  &kp N6  &ht200 KP_DIVIDE STAR    &trans  &trans  &trans  &trans  &trans
  &kp EQUAL           &kp N1  &kp N2  &kp N3  &kp PERIOD               &trans  &trans  &trans  &trans  &trans
                              &kp N0  &trans  &ht400 TAB KP_ENTER      &trans  &trans  &trans
            >;

            label = "LTenKey_1";
        };

        RArrows_2 {
            label = "RArrows_2";
            bindings = <
  &trans  &trans  &trans  &trans  &trans    &kp PAGE_UP    &kp HOME         &kp UP_ARROW       &kp END    &trans
  &trans  &trans  &trans  &trans  &trans    &kp PAGE_DOWN  &kp LEFT         &kp DOWN           &kp RIGHT  &trans
  &trans  &trans  &trans  &trans  &trans    &trans         &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RALT   &kp RGUI
                  &trans  &trans  &trans    &trans         &trans           &trans
            >;
        };

        Function_3 {
            bindings = <
  &trans  &kp F7  &kp F8  &kp F9  &kp F10    &trans  &trans  &trans  &trans  &trans
  &trans  &kp F4  &kp F5  &kp F6  &kp F11    &trans  &trans  &trans  &trans  &trans
  &trans  &kp F1  &kp F2  &kp F3  &kp F12    &trans  &trans  &trans  &trans  &trans
                  &trans  &trans  &trans     &trans  &trans  &trans
            >;

            label = "Function_3";
        };

        NumPunc_4 {
            bindings = <
  &kp N1     &kp N2                &kp N3              &kp N4                   &kp N5    &kp N6  &kp N7                   &kp N8             &kp N9                 &kp N0
  &kp GRAVE  &ht200 LEFT_ALT APOS  &ht200 LCTRL MINUS  &ht200 LEFT_SHIFT EQUAL  &trans    &trans  &ht200 RIGHT_SHIFT SEMI  &ht200 RCTRL LBKT  &ht200 RIGHT_ALT RBKT  &ht200 RIGHT_GUI BSLH
  &trans     &trans                &trans              &trans                   &trans    &trans  &trans                   &trans             &trans                 &trans
                                   &trans              &trans                   &trans    &trans  &trans                   &trans
            >;

            label = "NumPunc_4";
        };

        Mouse_5 {
            bindings = <
  &trans  &trans              &trans                   &trans     &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &hmt400 LCTRL RCLK  &hmt400 LEFT_SHIFT MCLK  &mkp LCLK  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans              &trans                   &trans     &trans    &trans  &trans  &trans  &trans  &trans
                              &trans                   &trans     &trans    &trans  &trans  &trans
            >;

            label = "Mouse_5";
        };

        D2R_6 {
            bindings = <
  &ht400 ESCAPE NUMBER_1  &kp N2              &kp N3           &kp N4                &kp T        &trans  &trans  &trans  &trans  &trans
  &ht400 LEFT_GUI F1      &ht200 LEFT_ALT F2  &ht200 LCTRL F3  &ht400 LEFT_SHIFT F4  &kp C        &trans  &trans  &trans  &trans  &trans
  &kp F5                  &kp F6              &kp F7           &kp F8                &kp I        &trans  &trans  &trans  &trans  &trans
                                              &trans           &trans                &kp LSHFT    &trans  &trans  &trans
            >;

            label = "D2R_6";
        };

        FPS_7 {
            bindings = <
  &kp Q           &none   &kp W   &kp E   &kp R        &trans  &trans  &trans  &trans  &trans
  &kp LEFT_SHIFT  &kp A   &kp S   &kp D   &trans       &trans  &trans  &trans  &trans  &trans
  &trans          &trans  &trans  &trans  &trans       &trans  &trans  &trans  &trans  &trans
                          &trans  &trans  &kp SPACE    &trans  &trans  &trans
            >;

            label = "FPS_7";
        };

        Lightroom_8 {
            bindings = <
  &trans  &trans    &kp UP    &kp X      &kp P     &trans  &trans  &trans  &trans  &trans
  &trans  &kp LEFT  &kp DOWN  &kp RIGHT  &trans    &trans  &trans  &trans  &trans  &trans
  &trans  &trans    &trans    &trans     &trans    &trans  &trans  &trans  &trans  &trans
                    &trans    &trans     &trans    &trans  &trans  &trans
            >;

            label = "Lightroom_8";
        };

        Bluetooth_9 {
            bindings = <
  &trans  &bt BT_CLR_ALL  &trans        &out OUT_TOG   &bootloader    &trans  &trans  &trans  &trans  &trans
  &trans  &bt BT_SEL 3    &bt BT_SEL 4  &bt BT_DISC 1  &trans         &trans  &trans  &trans  &trans  &trans
  &trans  &bt BT_SEL 0    &bt BT_SEL 1  &bt BT_SEL 2   &bt BT_CLR     &trans  &trans  &trans  &trans  &trans
                          &trans        &trans         &trans         &trans  &trans  &trans
            >;

            label = "Bluetooth_9";
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";

        FKeys {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};
